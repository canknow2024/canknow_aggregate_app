name: Build iOS

on:
  push:
    branches:
      - main
      - master
      - '**'
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    env:
      P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2

      - name: Get dependencies
        run: flutter pub get

      - name: Check signing files
        run: |
          echo "检查签名文件..."
          
          # 检查证书文件
          if [ ! -f "ios/signing/ios_distribution.p12" ]; then
            echo "❌ 错误: 缺少 ios_distribution.p12 文件"
            echo ""
            echo "解决方案:"
            echo "1. 从 Apple Developer 网站获取 iOS Distribution 证书"
            echo "2. 将证书导出为 .p12 格式（包含私钥）"
            echo "3. 设置密码"
            echo "4. 将文件重命名为 ios_distribution.p12 并放入 ios/signing/ 目录"
            echo "5. 在 GitHub Secrets 中配置 P12_PASSWORD 环境变量"
            echo ""
            echo "详细步骤请参考: ios/signing/README.md"
            exit 1
          fi
          
          # 检查描述文件
          if [ ! -f "ios/signing/AdHoc.mobileprovision" ]; then
            echo "❌ 错误: 缺少 AdHoc.mobileprovision 文件"
            echo ""
            echo "解决方案:"
            echo "1. 在 Apple Developer 网站创建 AdHoc 类型的 Provisioning Profile"
            echo "2. 选择正确的 App ID 和证书"
            echo "3. 添加需要安装 App 的设备 UDID"
            echo "4. 下载描述文件并重命名为 AdHoc.mobileprovision"
            echo ""
            echo "详细步骤请参考: ios/signing/README.md"
            exit 1
          fi
          
          echo "✅ 签名文件检查通过"

      - name: Setup keychain
        run: |
          echo "设置钥匙串..."
          # 创建临时钥匙串
          security create-keychain -p "" build.keychain
          security list-keychains -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security set-keychain-settings -t 3600 -l ~/Library/Keychains/build.keychain

      - name: Import signing certificate
        run: |
          echo "导入签名证书..."
          
          # 检查证书文件信息
          echo "🔍 检查证书文件信息:"
          ls -lh ios/signing/ios_distribution.p12
          
          # 导入证书到临时钥匙串
          security import ios/signing/ios_distribution.p12 -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign
          
          # 验证证书导入
          echo "验证证书导入..."
          security find-identity -v -p codesigning build.keychain
          
          # 详细检查证书信息
          echo "🔍 详细证书信息:"
          security find-identity -v -p codesigning build.keychain | while read line; do
            if [[ $line =~ ^[0-9]+\) ]]; then
              echo "找到证书: $line"
              # 提取证书哈希
              cert_hash=$(echo "$line" | awk '{print $2}')
              echo "证书哈希: $cert_hash"
              
              # 获取证书详细信息
              echo "证书详细信息:"
              security find-certificate -c "$cert_hash" build.keychain
            fi
          done
          
          # 检查是否有 iPhone Distribution 证书
          echo "🔍 检查 iPhone Distribution 证书:"
          security find-identity -v -p codesigning build.keychain | grep -i "iPhone Distribution" || echo "❌ 未找到 iPhone Distribution 证书"
          
          # 检查是否有 Apple Distribution 证书
          echo "🔍 检查 Apple Distribution 证书:"
          security find-identity -v -p codesigning build.keychain | grep -i "Apple Distribution" || echo "❌ 未找到 Apple Distribution 证书"
          
          # 设置证书信任
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain

      - name: Copy provisioning profile
        run: |
          echo "复制描述文件..."
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp ios/signing/AdHoc.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
          
          # 验证描述文件
          echo "验证描述文件..."
          ls -la ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Build iOS
        run: |
          echo "开始构建iOS应用..."
          
          # 显示当前钥匙串信息
          echo "🔍 当前钥匙串信息:"
          security list-keychains
          security default-keychain
          
          # 显示可用证书
          echo "🔑 可用证书:"
          security find-identity -v -p codesigning build.keychain
          
          # 显示描述文件
          echo "📋 描述文件:"
          ls -la ~/Library/MobileDevice/Provisioning\ Profiles/
          
          # 开始构建
          echo "🚀 开始 Flutter 构建..."
          flutter build ios --release

      - name: Build Archive
        run: |
          cd ios
          xcodebuild -workspace Runner.xcworkspace -scheme Runner -configuration Release -archivePath ${{ github.workspace }}/build/Runner.xcarchive archive

      - name: Export IPA
        run: |
          cd ios
          xcodebuild -exportArchive -archivePath ${{ github.workspace }}/build/Runner.xcarchive -exportOptionsPlist signing/ExportOptions.plist -exportPath ${{ github.workspace }}/build/ios

      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: build/ios/*.ipa