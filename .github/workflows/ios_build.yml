name: Build iOS

on:
  push:
    branches:
      - main
      - master
      - '**'
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    env:
      P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.8'  # 使用错误信息建议的版本
          cache: true
          
      - name: Disable Flutter analytics
        run: flutter config --no-analytics

      - name: Get dependencies
        run: flutter pub get

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Setup iOS dependencies
        run: |
          cd ios
          if [ ! -d "Pods" ]; then
            echo "安装 iOS 依赖..."
            pod install --repo-update
          else
            echo "更新 iOS 依赖..."
            pod install
          fi

      - name: Setup keychain
        run: |
          echo "设置构建钥匙串..."
          security create-keychain -p "" build.keychain
          security list-keychains -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security set-keychain-settings -t 3600 -l ~/Library/Keychains/build.keychain

      - name: Import signing certificate
        run: |
          echo "导入签名证书..."
          security import ios/signing/ios_distribution.p12 -k build.keychain -P "$P12_PASSWORD" -A
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "" build.keychain
          
          # 验证证书导入
          if security find-identity -v -p codesigning build.keychain | grep -E "(Apple Distribution|iPhone Distribution)" > /dev/null; then
            echo "✅ 证书导入成功"
          else
            echo "❌ 证书导入失败"
            exit 1
          fi

      - name: Copy provisioning profile
        run: |
          echo "配置描述文件..."
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp ios/signing/AdHoc.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
          echo "✅ 描述文件配置完成"

      - name: Build iOS
        run: |
          echo "构建 Flutter iOS 应用..."
          flutter build ios --release --no-codesign
          echo "✅ Flutter 构建完成"

      - name: Build Archive
        run: |
          echo "创建 iOS Archive..."
          cd ios
          set -e
          xcodebuild -workspace Runner.xcworkspace -scheme Runner -configuration Release -archivePath build/Runner.xcarchive archive
          echo "✅ Archive 创建完成"

      - name: Export IPA
        run: |
          echo "导出 IPA 文件..."
          cd ios
          set -e
          xcodebuild -exportArchive -archivePath build/Runner.xcarchive -exportOptionsPlist signing/ExportOptions.plist -exportPath build -allowProvisioningUpdates
          
          # 验证 IPA 文件生成
          if ls build/*.ipa 1> /dev/null 2>&1; then
            echo "✅ IPA 文件导出成功"
            ls -lh build/*.ipa
          else
            echo "❌ IPA 文件导出失败"
            exit 1
          fi

      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: ios/build/*.ipa